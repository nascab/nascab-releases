"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[271],{271:function(e,t){function n(e){try{return decodeURIComponent(e.name).split("/").pop()}catch(e){return console.log("解析文件名出错",e),""}}t.makeTxt=void 0,t.makeTxt=async e=>{const t=new Map;let r=null;var o=await function(e){return new Promise(((t,n)=>{const r=new FileReader;r.onload=function(){t(r.result)},r.onerror=function(){n(new Error("Error reading file"))},r.readAsText(e)}))}(e);r=function(e){const t=e.split("\n");let n=[],r="";for(let e=0;e<t.length;e++)r.length+t[e].length+1<=3e4?r+=`<p> ${t[e]} </p>`:(""!==r&&n.push(r),r=`<p> ${t[e]} </p>`),e===t.length-1&&""!==r&&n.push(r);return n}(o);const l={getCover:()=>null};return l.metadata={title:n(e)},l.sections=r.map(((e,n)=>({id:n,load:()=>(async e=>{if(t.has(e))return t.get(e);const n=URL.createObjectURL(new Blob([r[e]],{type:"text/html"}));return t.set(e,n),n})(n),unload:()=>{return e=n,void t.delete(e);var e},size:e.length}))),l.toc=r.map(((e,t)=>({label:t,href:t}))),l.resolveHref=e=>({index:l.sections.findIndex((t=>t.id===e))}),l.splitTOCHref=e=>[e,null],l.getTOCFragment=e=>e.documentElement,l.destroy=()=>{for(const e of urls.values())for(const t of e)URL.revokeObjectURL(t)},l}}}]);